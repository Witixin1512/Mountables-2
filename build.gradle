buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven {url = 'https://maven.parchmentmc.org'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

def mc_version = '1.19.3'
version = mc_version + '-BETA-1.0.1'
group = 'net.witixin.mountables2' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'mountables2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2022.12.18-1.19.3'
    //mappings channel: 'official', version: '1.19.3'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--username', 'Dev###'
            mods {
                mountables2 {
                    source sourceSets.main
                }
            }
        }
        client2 {
            workingDirectory project.file('runClientAlt')
            setTaskName("runClientAlt")
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                mountables2 {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run_server')
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--singleplayer', 'true', '--nogui', 'nogui'
            mods {
                mountables2 {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run_data')
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'mountables2', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mountables2 {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    //geckolib
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    repositories {
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.0'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19.3:4.0.2')
    //runtimeOnly fg.deobf("mezz.jei:jei-1.19.3:11.4.1.113")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mountables2",
                "Specification-Vendor"    : "Witixin",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "Mountables2",
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "Witixin",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

